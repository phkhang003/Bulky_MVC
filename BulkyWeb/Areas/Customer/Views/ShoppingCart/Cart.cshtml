@model BulkyBook.Models.ShoppingCart

@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-2">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2 text-end text-sm-start">Shopping Cart</h2>
            </div>
        </div>
    </div>

    <div class="card-body">
        @if (Model.Items.Count == 0)
        {
            <div class="alert alert-secondary text-center" role="alert">
                Please add items to shopping cart.
            </div>
        }
        else
        {
            <div class="row mb-4">
                <div class="col-6 col-md-2 offset-lg-1">
                    <a asp-controller="Home" asp-action="Index" class="btn btn-outline-primary bg-gradient fw-semibold btn-sm text-uppercase">
                        <small>Continue Shopping</small>
                    </a>
                </div>
            </div>

            <div class="row">
                <div class="col-md-8 offset-md-2">
                    <table class="table">
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    <td>
                                        @if (item.Product != null)
                                        {
                                            <img src="@item.Product.ImageUrl" width="100" height="100" class="img-thumbnail" />
                                            @item.Product.Title
                                        }
                                        else
                                        {
                                            <span>Product not available</span>
                                        }
                                    </td>
                                    <td style="text-align: center; vertical-align: middle;">
                                        <div style="display: flex; justify-content: center; align-items: center;">
                                            <label for="quantity-@item.Id" style="margin-right: 5px;">Quantity:</label>
                                            <input type="number" id="quantity-@item.Id" name="quantity" value="@item.Quantity" min="1" style="width: 50px; text-align: center;">
                                        </div>
                                    </td>
                                    <td style="text-align: center; vertical-align: middle;">
                                        @if (item.Product != null)
                                        {
                                            <span style="display: inline-block; text-align: center;">
                                                @item.Product.Price.ToString("C2")
                                            </span>
                                        }
                                        else
                                        {
                                            <span>Price not available</span>
                                        }
                                    </td>
                                    <td style="text-align: center; vertical-align: middle;">
                                        <div style="display: flex; justify-content: center; align-items: center;">
                                            <div class="btn-group" style="width: 100px;">
                                                <button type="button" class="btn btn-outline-primary quantity-decrease" data-cart-item-id="@item.Id"><i class="bi bi-dash-square"></i></button>
                                                <button type="button" class="btn btn-outline-primary quantity-increase" data-cart-item-id="@item.Id"><i class="bi bi-plus-square"></i></button>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="text-center" style="vertical-align: middle;">
                                        <div style="display: inline-block; text-align: center;">
                                            <form asp-action="RemoveFromCart" method="post">
                                                <input type="hidden" name="cartItemId" value="@item.Id" />
                                                <button type="submit" class="btn btn-danger"><i class="bi bi-trash"></i></button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 offset-md-4">
                    <ul class="list-group">
                        <li class="d-flex justify-content-between align-items-center mb-3">
                            <h2 class="text-dark fw-semibold text-uppercase">Total (USD):</h2>
                            <h2 class="text-dark fw-bolder cart-total">@Model.TotalPrice.ToString("c")</h2>
                        </li>
                        <a href="@Url.Action("Summary", "ShoppingCart")" class="btn btn-primary btn-sm border-0 bg-gradient w-100 py-2">Summary</a>
                    </ul>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Function to update quantity and call server-side update
            function updateCartItemQuantity(cartItemId, newQuantity) {
                $.ajax({
                    url: '/Customer/ShoppingCart/UpdateQuantity',
                    type: 'POST',
                    data: {
                        cartItemId: cartItemId,
                        quantity: newQuantity
                    },
                    success: function (response) {
                        if (response.success) {
                            // Update quantity input value on success
                            $('#quantity-' + cartItemId).val(newQuantity);
                            // Update item total
                            $('#item-total-' + cartItemId).text(response.newItemTotal);
                            // Update total price
                            $('.cart-total').text(response.newCartTotal);
                            $('#cart-total').text(response.newCartTotal);
                        }
                    },
                    error: function () {
                        // Handle error response if needed
                    }
                });
            }

            // Handle click events for quantity decrease buttons
            $('.quantity-decrease').click(function () {
                var cartItemId = $(this).data('cart-item-id');
                var quantityInput = $('#quantity-' + cartItemId);
                var newQuantity = parseInt(quantityInput.val()) - 1;
                if (newQuantity >= 1) {
                    updateCartItemQuantity(cartItemId, newQuantity);
                }
            });

            // Handle click events for quantity increase buttons
            $('.quantity-increase').click(function () {
                var cartItemId = $(this).data('cart-item-id');
                var quantityInput = $('#quantity-' + cartItemId);
                var newQuantity = parseInt(quantityInput.val()) + 1;
                updateCartItemQuantity(cartItemId, newQuantity);
            });

            // Handle change events for quantity input fields
            $('input[name="quantity"]').change(function () {
                var cartItemId = $(this).attr('id').split('-')[1];
                var newQuantity = parseInt($(this).val());
                if (newQuantity >= 1) {
                    updateCartItemQuantity(cartItemId, newQuantity);
                } else {
                    $(this).val(1);  // Ensure the quantity is at least 1
                    updateCartItemQuantity(cartItemId, 1);
                }
            });
        });
    </script>
}
