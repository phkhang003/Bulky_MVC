@* @model BulkyBook.Models.ShoppingCart

@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-2">
        <div class="row align-items-center justify-content-between">
            <div class="col-auto">
                <h2 class="text-white py-2">Shopping Cart</h2>
            </div>
            <div class="col-auto text-end">
                <a asp-controller="Home" asp-action="Index" class="btn btn-primary fw-semibold btn-sm text-uppercase">
                    <small>Continue Shopping</small>
                </a>
            </div>
        </div>
    </div>


    <div class="card-body">
        @if (Model.Items.Count == 0)
        {
            <div class="alert alert-secondary text-center" role="alert">
                Please add items to shopping cart.
            </div>
        }
        else
        {
            <div id="cartForm">
                <div class="row">
                    <div class="col-md-8 offset-md-2">
                        <table class="table">
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td>
                                            <div class="form-check">
                                                <input class="form-check-input product-checkbox" type="checkbox" id="checkbox-@item.Id" data-cart-item-id="@item.Id" style="transform: scale(1.5); margin-right: 10px;">
                                                <label class="form-check-label" for="checkbox-@item.Id">
                                                    @if (item.Product != null)
                                                    {
                                                        <img src="@item.Product.ImageUrl" width="100" height="100" class="img-thumbnail" />
                                                        @item.Product.Title
                                                    }
                                                    else
                                                    {
                                                        <span>Product not available</span>
                                                    }
                                                </label>
                                            </div>
                                        </td>
                                        <td style="text-align: center; vertical-align: middle;">
                                            <div style="display: flex; justify-content: center; align-items: center;">
                                                <label for="quantity-@item.Id" style="margin-right: 5px;">Quantity:</label>
                                                <input type="number" id="quantity-@item.Id" name="quantity" value="@item.Quantity" min="1" style="width: 50px; text-align: center;">
                                            </div>
                                        </td>
                                        <td style="text-align: center; vertical-align: middle;">
                                            @if (item.Product != null)
                                            {
                                                <span style="display: inline-block; text-align: center;">
                                                    @item.Product.Price.ToString("C2")
                                                </span>
                                            }
                                            else
                                            {
                                                <span>Price not available</span>
                                            }
                                        </td>
                                        <td style="text-align: center; vertical-align: middle;">
                                            <div style="display: flex; justify-content: center; align-items: center;">
                                                <div class="btn-group" style="width: 100px;">
                                                    <button type="button" class="btn btn-outline-primary quantity-decrease" data-cart-item-id="@item.Id"><i class="bi bi-dash-square"></i></button>
                                                    <button type="button" class="btn btn-outline-primary quantity-increase" data-cart-item-id="@item.Id"><i class="bi bi-plus-square"></i></button>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-center" style="vertical-align: middle;">
                                            <div style="display: inline-block; text-align: center;">
                                                <form asp-action="RemoveFromCart" method="post">
                                                    <input type="hidden" name="cartItemId" value="@item.Id" />
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-danger"><i class="bi bi-trash"></i></button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-8 offset-md-2">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <button id="btnToggleSelectAll" type="button" class="btn btn-outline-primary bg-gradient fw-semibold btn-sm text-uppercase">
                                <small>Select All</small>
                            </button>
                            <h2 class="text-dark fw-semibold text-uppercase">Total (USD):  @Model.TotalPrice.ToString("c")</h2>
                            <button type="button" id="btnShowSummary" class="btn btn-primary btn-md border-0 bg-gradient py-2">
                                Summary
                            </button>
                        </div>
                    </div>
                </div>

            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var toggleSelectAll = false;

            // Function to toggle select all checkbox
            function toggleSelectAllCheckboxes() {
                toggleSelectAll = !toggleSelectAll;
                if (toggleSelectAll) {
                    $('.product-checkbox').prop('checked', true);
                    $('#btnToggleSelectAll').html('<small>Clear Selection</small>');
                } else {
                    $('.product-checkbox').prop('checked', false);
                    $('#btnToggleSelectAll').html('<small>Select All</small>');
                }
                updateTotalPrice();
            }

            // Function to update the total price based on selected items
            function updateTotalPrice() {
                var total = 0;
                $('.product-checkbox:checked').each(function () {
                    var row = $(this).closest('tr');
                    var priceText = row.find('td:eq(2)').text().trim();
                    var price = parseFloat(priceText.replace(/[^0-9.-]+/g, "")); // Remove currency symbol and format
                    if (!isNaN(price)) {
                        total += price;
                    }
                });
                $('.text-dark.fw-semibold.text-uppercase').text('Total (USD): ' + total.toFixed(2));
            }

            // Function to check if all items are selected
            function checkIfAllSelected() {
                var allCheckboxes = $('.product-checkbox');
                var allSelected = allCheckboxes.length === allCheckboxes.filter(':checked').length;
                if (allSelected) {
                    if (!toggleSelectAll) {
                        toggleSelectAll = true;
                        $('#btnToggleSelectAll').html('<small>Clear Selection</small>');
                    }
                } else {
                    if (toggleSelectAll) {
                        toggleSelectAll = false;
                        $('#btnToggleSelectAll').html('<small>Select All</small>');
                    }
                }
            }

            // Handle click event for the Select All button
            $('#btnToggleSelectAll').click(function () {
                toggleSelectAllCheckboxes();
            });

            // Function to update cart item quantity
            function updateCartItemQuantity(cartItemId, quantity) {
                $.ajax({
                    url: '@Url.Action("UpdateQuantity", "ShoppingCart")',
                    type: 'POST',
                    data: {
                        cartItemId: cartItemId,
                        quantity: quantity
                    },
                    success: function (response) {
                        if (response.success) {
                            updateTotalPrice();
                        } else {
                            alert('Failed to update quantity. Please try again.');
                        }
                    },
                    error: function () {
                        alert('An error occurred while updating quantity.');
                    }
                });
            }

            // Handle click events for quantity decrease buttons
            $('.quantity-decrease').click(function () {
                var cartItemId = $(this).data('cart-item-id');
                var quantityInput = $('#quantity-' + cartItemId);
                var newQuantity = parseInt(quantityInput.val()) - 1;
                if (newQuantity >= 1) {
                    updateCartItemQuantity(cartItemId, newQuantity);
                    quantityInput.val(newQuantity);
                }
            });

            // Handle click events for quantity increase buttons
            $('.quantity-increase').click(function () {
                var cartItemId = $(this).data('cart-item-id');
                var quantityInput = $('#quantity-' + cartItemId);
                var newQuantity = parseInt(quantityInput.val()) + 1;
                updateCartItemQuantity(cartItemId, newQuantity);
                quantityInput.val(newQuantity);
            });

            // Handle change events for quantity input fields
            $('input[name="quantity"]').change(function () {
                var cartItemId = $(this).attr('id').split('-')[1];
                var newQuantity = parseInt($(this).val());
                if (newQuantity >= 1) {
                    updateCartItemQuantity(cartItemId, newQuantity);
                } else {
                    $(this).val(1);  // Ensure the quantity is at least 1
                    updateCartItemQuantity(cartItemId, 1);
                }
            });

            // Show summary button click event
            $('#btnShowSummary').click(function () {
                var selectedItems = $('.product-checkbox:checked');
                if (selectedItems.length > 0) {
                    var selectedIds = [];
                    selectedItems.each(function () {
                        selectedIds.push($(this).data('cart-item-id'));
                    });
                    // Redirect to summary page with selected item ids
                    var url = '@Url.Action("Summary", "ShoppingCart")' + '?selectedIds=' + selectedIds.join(',');
                    window.location.href = url;
                } else {
                    alert('You haven\'t selected any products to purchase.');
                }
            });

            // Update total price and check if all items are selected when a checkbox is changed
            $('.product-checkbox').change(function () {
                updateTotalPrice();
                checkIfAllSelected();
            });

            // Update total price and check if all items are selected on page load
            updateTotalPrice();
            checkIfAllSelected();
        });
    </script>
}


 *@